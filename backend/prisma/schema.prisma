generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  MANAGER
  USER
}

enum Status {
  TODO
  IN_PROGRESS
  DONE
}

model User {
  id        Int           @id @default(autoincrement())
  name      String
  email     String        @unique
  password  String
  role      Role          @default(USER)
  projects  Project[]     @relation("UserProjects")
  tasks     Task[]
  sessions  UserSession[]
  
  permissionRequestsSent     PermissionRequest[] @relation("SentRequests")
  permissionRequestsHandled   PermissionRequest[] @relation("HandledRequests")

  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt
}


model UserSession {
  id            Int       @id @default(autoincrement())
  user          User      @relation(fields: [userId], references: [id])
  userId        Int
  loginTime     DateTime
  logoutTime    DateTime?
  totalDuration Float? // In hours or minutes, your choice
}

model Project {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  users     User[]   @relation("UserProjects")
  tasks     Task[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  status    String   @default("TODO")
}

model Task {
  id        Int      @id @default(autoincrement())
  title     String
  status    Status   @default(TODO)
  user      User?    @relation(fields: [userId], references: [id])
  userId    Int?
  project   Project  @relation(fields: [projectId], references: [id])
  projectId Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([title, projectId]) // âœ… add this at the bottom of the model
}

model PermissionRequest {
  id             Int      @id @default(autoincrement())

  requestedBy    User     @relation("SentRequests", fields: [requestedById], references: [id])
  requestedById  Int

  toEmail        String
  reason         String
  startTime      DateTime
  endTime        DateTime
  status         String   @default("PENDING")

  respondedBy    User?    @relation("HandledRequests", fields: [respondedById], references: [id])
  respondedById  Int?

  responseMessage String?

  // ðŸ†• Add these two flags
  senderDeleted   Boolean  @default(false)
  receiverDeleted Boolean  @default(false)

  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

